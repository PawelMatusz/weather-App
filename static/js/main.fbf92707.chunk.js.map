{"version":3,"sources":["Components/Form.js","Components/Result.js","Components/App.js","index.js"],"names":["Form","props","onSubmit","submit","type","value","placeholder","onChange","change","Result","weather","date","city","sunrise","sunset","temp","wind","pressure","err","content","sunriseTime","Date","toLocaleTimeString","sunsetTime","className","App","state","handleInputChange","e","setState","target","prevProps","prevState","this","length","API","fetch","then","response","ok","Error","json","data","time","toLocaleString","sys","main","speed","catch","console","log","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAeeA,G,MAbF,SAAAC,GACX,OACE,0BAAMC,SAAUD,EAAME,QACpB,2BACEC,KAAK,OACLC,MAAOJ,EAAMI,MACbC,YAAY,eACZC,SAAUN,EAAMO,YC+BTC,G,MArCA,SAAAR,GAAU,IAAD,EAUlBA,EAAMS,QARRC,EAFoB,EAEpBA,KACAC,EAHoB,EAGpBA,KACAC,EAJoB,EAIpBA,QACAC,EALoB,EAKpBA,OACAC,EANoB,EAMpBA,KACAC,EAPoB,EAOpBA,KACAC,EARoB,EAQpBA,SACAC,EAToB,EASpBA,IAEEC,EAAU,KAEd,IAAKD,GAAON,EAAM,CAChB,IAAMQ,EAAc,IAAIC,KAAe,IAAVR,GAAgBS,qBACvCC,EAAa,IAAIF,KAAc,IAATP,GAAeQ,qBAC3CH,EACE,oCACE,wDAC2B,4BAAKP,IAEhC,wDAA8BD,GAC9B,qDAA2BI,EAA3B,UACA,qEAA8BK,GAC9B,qEAA8BG,GAC9B,0DAA2BP,EAA3B,QACA,wDAAyBC,EAAzB,SAIN,OACE,oCACE,yBAAKO,UAAU,UAAUN,EAAG,yBAAqBN,GAASO,MCkCjDM,E,4MAhEbC,MAAQ,CACNrB,MAAO,GACPM,KAAM,GACNC,KAAM,GACNC,QAAS,GACTC,OAAQ,GACRC,KAAM,GACNC,KAAM,GACNC,SAAU,GACVC,KAAK,G,EAGPS,kBAAoB,SAAAC,GAClB,EAAKC,SAAS,CACZxB,MAAOuB,EAAEE,OAAOzB,S,iEAID0B,EAAWC,GAAY,IAAD,OACvC,GAAgC,IAA5BC,KAAKP,MAAMrB,MAAM6B,QACjBF,EAAU3B,QAAU4B,KAAKP,MAAMrB,MAAO,CACxC,IAAM8B,EAAG,2DAAuDF,KAAKP,MAAMrB,MAAlE,6DAET+B,MAAMD,GACHE,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAET,MAAME,MAAM,+BAEbH,MAAK,SAAAC,GAAQ,OAAIA,EAASG,UAC1BJ,MAAK,SAAAK,GACJ,IAAMC,GAAO,IAAItB,MAAOuB,iBACxB,EAAKf,UAAS,SAAAG,GAAS,MAAK,CAC1Bd,KAAK,EACLP,KAAMgC,EACN9B,QAAS6B,EAAKG,IAAIhC,QAClBC,OAAQ4B,EAAKG,IAAI/B,OACjBC,KAAM2B,EAAKI,KAAK/B,KAChBE,SAAUyB,EAAKI,KAAK7B,SACpBD,KAAM0B,EAAK1B,KAAK+B,MAChBnC,KAAMoB,EAAU3B,aAGnB2C,OAAM,SAAA9B,GACL+B,QAAQC,IAAIhC,GACZ,EAAKW,UAAS,SAAAG,GAAS,MAAK,CAC1Bd,KAAK,EACLN,KAAMoB,EAAU3B,gB,+BAOxB,OACE,yBAAKmB,UAAU,OACb,kBAAC,EAAD,CAAMnB,MAAO4B,KAAKP,MAAMrB,MAAOG,OAAQyB,KAAKN,oBAC5C,kBAAC,EAAD,CAAQjB,QAASuB,KAAKP,a,GA3DZyB,aCClBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.fbf92707.chunk.js","sourcesContent":["import React from 'react';\n\nconst Form = props => {\n  return (\n    <form onSubmit={props.submit}>\n      <input\n        type='text'\n        value={props.value}\n        placeholder='Wpisz Miasto'\n        onChange={props.change}\n      />\n    </form>\n  );\n};\n\nexport default Form;\n","import React, { Component } from 'react';\nimport './Result.css';\n\nconst Result = props => {\n  const {\n    date,\n    city,\n    sunrise,\n    sunset,\n    temp,\n    wind,\n    pressure,\n    err,\n  } = props.weather;\n  let content = null;\n\n  if (!err && city) {\n    const sunriseTime = new Date(sunrise * 1000).toLocaleTimeString();\n    const sunsetTime = new Date(sunset * 1000).toLocaleTimeString();\n    content = (\n      <>\n        <h3>\n          Wyszukiwanie dla miasta: <em>{city}</em>\n        </h3>\n        <h4>Dane dla dnia i godziny: {date}</h4>\n        <h4>Aktualna temperatura: {temp} &#176;C</h4>\n        <h4>Wschód słońca dzisiaj o: {sunriseTime}</h4>\n        <h4>Zachód słońca dzisiaj o: {sunsetTime}</h4>\n        <h4>Aktualna siła wiatru: {wind} m/s</h4>\n        <h4>Aktualne ciśnienie: {pressure} hPa</h4>\n      </>\n    );\n  }\n  return (\n    <>\n      <div className='result'>{err ? `Nie ma w bazie ${city}` : content}</div>\n    </>\n  );\n};\n\nexport default Result;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Form from './Form.js';\nimport Result from './Result';\nclass App extends Component {\n  state = {\n    value: '',\n    date: '',\n    city: '',\n    sunrise: '',\n    sunset: '',\n    temp: '',\n    wind: '',\n    pressure: '',\n    err: false,\n  };\n\n  handleInputChange = e => {\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.value.length === 0) return;\n    if (prevState.value !== this.state.value) {\n      const API = `http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&APPID=e6d93006992b0648ca0f2393351b36e7&units=metric\n   `;\n      fetch(API)\n        .then(response => {\n          if (response.ok) {\n            return response;\n          }\n          throw Error('Nie udało się!');\n        })\n        .then(response => response.json())\n        .then(data => {\n          const time = new Date().toLocaleString();\n          this.setState(prevState => ({\n            err: false,\n            date: time,\n            sunrise: data.sys.sunrise,\n            sunset: data.sys.sunset,\n            temp: data.main.temp,\n            pressure: data.main.pressure,\n            wind: data.wind.speed,\n            city: prevState.value,\n          }));\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState(prevState => ({\n            err: true,\n            city: prevState.value,\n          }));\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div className='app'>\n        <Form value={this.state.value} change={this.handleInputChange} />\n        <Result weather={this.state} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}